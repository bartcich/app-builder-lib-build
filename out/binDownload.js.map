{"version":3,"sources":["../src/binDownload.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA,MAAM,gBAAgB,GAAG,IAAI,GAAJ,EAAzB;;AAEM,SAAU,QAAV,CAAmB,GAAnB,EAAgC,MAAhC,EAAgD,QAAhD,EAAwE;AAC5E,QAAM,IAAI,GAAG,CAAC,UAAD,EAAa,OAAb,EAAsB,GAAtB,EAA2B,UAA3B,EAAuC,MAAvC,CAAb;;AACA,MAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,IAAA,IAAI,CAAC,IAAL,CAAU,UAAV,EAAsB,QAAtB;AACD;;AACD,SAAO,sCAAkB,IAAlB,CAAP;AACD;;AAEK,SAAU,gBAAV,CAA2B,IAA3B,EAAyC,OAAzC,EAA0D,QAA1D,EAA0E;AAC9E,QAAM,OAAO,GAAG,GAAG,IAAI,IAAI,OAAO,EAAlC;AACA,SAAO,MAAM,CAAC,OAAD,EAAU,oFAAoF,OAAO,IAAI,OAAO,KAAhH,EAAuH,QAAvH,CAAb;AACD;;AAEK,SAAU,MAAV,CAAiB,IAAjB,EAA+B,GAA/B,EAAoD,QAApD,EAA4E;AAChF,MAAI,OAAO,GAAG,gBAAgB,CAAC,GAAjB,CAAqB,IAArB,CAAd,CADgF,CAEhF;;AACA,MAAI,OAAO,IAAI,IAAf,EAAqB;AACnB,WAAO,OAAP;AACD;;AAED,EAAA,OAAO,GAAG,QAAQ,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,CAAlB;AACA,EAAA,gBAAgB,CAAC,GAAjB,CAAqB,IAArB,EAA2B,OAA3B;AACA,SAAO,OAAP;AACD;;AAED,SAAS,QAAT,CAAkB,IAAlB,EAAgC,GAAhC,EAAgE,QAAhE,EAAmG;AACjG,QAAM,IAAI,GAAG,CAAC,mBAAD,EAAsB,QAAtB,EAAgC,IAAhC,CAAb;;AACA,MAAI,GAAG,IAAI,IAAX,EAAiB;AACf,IAAA,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,GAAnB;AACD;;AACD,MAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,IAAA,IAAI,CAAC,IAAL,CAAU,UAAV,EAAsB,QAAtB;AACD;;AACD,SAAO,sCAAkB,IAAlB,CAAP;AACD,C","sourcesContent":["import { executeAppBuilder } from \"builder-util\"\r\n\r\nconst versionToPromise = new Map<string, Promise<string>>()\r\n\r\nexport function download(url: string, output: string, checksum?: string | null): Promise<void> {\r\n  const args = [\"download\", \"--url\", url, \"--output\", output]\r\n  if (checksum != null) {\r\n    args.push(\"--sha512\", checksum)\r\n  }\r\n  return executeAppBuilder(args) as Promise<any>\r\n}\r\n\r\nexport function getBinFromGithub(name: string, version: string, checksum: string): Promise<string> {\r\n  const dirName = `${name}-${version}`\r\n  return getBin(dirName, `https://github.com/electron-userland/electron-builder-binaries/releases/download/${dirName}/${dirName}.7z`, checksum)\r\n}\r\n\r\nexport function getBin(name: string, url?: string | null, checksum?: string | null): Promise<string> {\r\n  let promise = versionToPromise.get(name)\r\n  // if rejected, we will try to download again\r\n  if (promise != null) {\r\n    return promise\r\n  }\r\n\r\n  promise = doGetBin(name, url, checksum)\r\n  versionToPromise.set(name, promise)\r\n  return promise\r\n}\r\n\r\nfunction doGetBin(name: string, url: string | undefined | null, checksum: string | null | undefined): Promise<string> {\r\n  const args = [\"download-artifact\", \"--name\", name]\r\n  if (url != null) {\r\n    args.push(\"--url\", url)\r\n  }\r\n  if (checksum != null) {\r\n    args.push(\"--sha512\", checksum)\r\n  }\r\n  return executeAppBuilder(args)\r\n}"],"sourceRoot":""}
