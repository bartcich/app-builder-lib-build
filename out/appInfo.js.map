{"version":3,"sources":["../src/appInfo.ts"],"names":[],"mappings":"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","sourcesContent":["import { isEmptyOrSpaces, log } from \"builder-util\"\r\nimport sanitizeFileName from \"sanitize-filename\"\r\nimport { prerelease, SemVer } from \"semver\"\r\nimport { PlatformSpecificBuildOptions } from \"./options/PlatformSpecificBuildOptions\"\r\nimport { Packager } from \"./packager\"\r\nimport { expandMacro } from \"./util/macroExpander\"\r\n\r\nexport class AppInfo {\r\n  readonly description = smarten(this.info.metadata.description || \"\")\r\n  readonly version: string\r\n\r\n  readonly buildNumber: string | undefined\r\n  readonly buildVersion: string\r\n\r\n  readonly productName: string\r\n  readonly productFilename: string\r\n\r\n  constructor(private readonly info: Packager, buildVersion: string | null | undefined, private readonly platformSpecificOptions: PlatformSpecificBuildOptions | null = null) {\r\n    this.version = info.metadata.version!!\r\n\r\n    if (buildVersion == null) {\r\n      buildVersion = info.config.buildVersion\r\n    }\r\n\r\n    this.buildNumber = process.env.BUILD_NUMBER || process.env.TRAVIS_BUILD_NUMBER || process.env.APPVEYOR_BUILD_NUMBER || process.env.CIRCLE_BUILD_NUM || process.env.BUILD_BUILDNUMBER\r\n    if (buildVersion == null) {\r\n      buildVersion = this.version\r\n      if (!isEmptyOrSpaces(this.buildNumber)) {\r\n        buildVersion = this.buildNumber\r\n      }\r\n    }\r\n    this.buildVersion = buildVersion\r\n\r\n    this.productName = info.config.productName || info.metadata.productName || info.metadata.name!!\r\n    this.productFilename = sanitizeFileName(this.productName)\r\n  }\r\n\r\n  get channel(): string | null {\r\n    const prereleaseInfo = prerelease(this.version)\r\n    if (prereleaseInfo != null && prereleaseInfo.length > 0) {\r\n      return prereleaseInfo[0]\r\n    }\r\n    return null\r\n  }\r\n\r\n  getVersionInWeirdWindowsForm(isSetBuildNumber = true): string {\r\n    const parsedVersion = new SemVer(this.version)\r\n    // https://github.com/electron-userland/electron-builder/issues/2635#issuecomment-371792272\r\n    let buildNumber = isSetBuildNumber ? this.buildNumber : null\r\n    if (buildNumber == null || !/^\\d+$/.test(buildNumber)) {\r\n      buildNumber = \"0\"\r\n    }\r\n    return `${parsedVersion.major}.${parsedVersion.minor}.${parsedVersion.patch}.${buildNumber}`\r\n  }\r\n\r\n  private get notNullDevMetadata() {\r\n    return this.info.devMetadata || {}\r\n  }\r\n\r\n  get companyName(): string | null {\r\n    const author = this.info.metadata.author || this.notNullDevMetadata.author\r\n    return author == null ? null : author.name\r\n  }\r\n\r\n  get id(): string {\r\n    let appId: string | null | undefined = null\r\n    for (const options of [this.platformSpecificOptions, this.info.config]) {\r\n      if (options != null && appId == null) {\r\n        appId = options.appId\r\n      }\r\n    }\r\n\r\n    const generateDefaultAppId = () => {\r\n      const info = this.info\r\n      return `${info.framework.defaultAppIdPrefix}${info.metadata.name!.toLowerCase()}`\r\n    }\r\n\r\n    if (appId != null && (appId === \"your.id\" || isEmptyOrSpaces(appId))) {\r\n      const incorrectAppId = appId\r\n      appId = generateDefaultAppId()\r\n      log.warn(`do not use \"${incorrectAppId}\" as appId, \"${appId}\" will be used instead`)\r\n    }\r\n\r\n    return appId == null ? generateDefaultAppId() : appId\r\n  }\r\n\r\n  get macBundleIdentifier(): string {\r\n    return filterCFBundleIdentifier(this.id)\r\n  }\r\n\r\n  get name(): string {\r\n    return this.info.metadata.name!!\r\n  }\r\n\r\n  get linuxPackageName(): string {\r\n    const name = this.name\r\n    // https://github.com/electron-userland/electron-builder/issues/2963\r\n    return name.startsWith(\"@\") ? this.productFilename : name\r\n  }\r\n\r\n  get sanitizedName(): string {\r\n    return sanitizeFileName(this.name)\r\n  }\r\n\r\n  get updaterCacheDirName(): string {\r\n    return this.sanitizedName.toLowerCase() + \"-updater\"\r\n  }\r\n\r\n  get copyright(): string {\r\n    const copyright = this.info.config.copyright\r\n    if (copyright != null) {\r\n      return expandMacro(copyright, null, this)\r\n    }\r\n    return `Copyright Â© ${new Date().getFullYear()} ${this.companyName || this.productName}`\r\n  }\r\n\r\n  async computePackageUrl(): Promise<string | null> {\r\n    const url = this.info.metadata.homepage || this.notNullDevMetadata.homepage\r\n    if (url != null) {\r\n      return url\r\n    }\r\n\r\n    const info = await this.info.repositoryInfo\r\n    return info == null || info.type !== \"github\"  ? null : `https://${info.domain}/${info.user}/${info.project}`\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport function filterCFBundleIdentifier(identifier: string) {\r\n  // Remove special characters and allow only alphanumeric (A-Z,a-z,0-9), hyphen (-), and period (.)\r\n  // Apple documentation: https://developer.apple.com/library/mac/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102070\r\n  return identifier.replace(/ /g, \"-\").replace(/[^a-zA-Z0-9.-]/g, \"\")\r\n}\r\n\r\n// fpm bug - rpm build --description is not escaped, well... decided to replace quite to smart quote\r\n// http://leancrew.com/all-this/2010/11/smart-quotes-in-javascript/\r\nexport function smarten(s: string): string {\r\n  // opening singles\r\n  s = s.replace(/(^|[-\\u2014\\s(\\[\"])'/g, \"$1\\u2018\")\r\n  // closing singles & apostrophes\r\n  s = s.replace(/'/g, \"\\u2019\")\r\n  // opening doubles\r\n  s = s.replace(/(^|[-\\u2014/\\[(\\u2018\\s])\"/g, \"$1\\u201c\")\r\n  // closing doubles\r\n  s = s.replace(/\"/g, \"\\u201d\")\r\n  return s\r\n}"],"sourceRoot":""}
