{"version":3,"sources":["../../src/targets/pkg.ts"],"names":[],"mappings":"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","sourcesContent":["import { Arch, debug, exec, use } from \"builder-util\"\r\nimport { statOrNull } from \"builder-util/out/fs\"\r\nimport { getNotLocalizedLicenseFile } from \"../util/license\"\r\nimport { readFile, unlink, writeFile } from \"fs-extra-p\"\r\nimport * as path from \"path\"\r\nimport { build as buildPlist, parse as parsePlist } from \"plist\"\r\nimport { PkgOptions } from \"..\"\r\nimport { filterCFBundleIdentifier } from \"../appInfo\"\r\nimport { findIdentity, Identity } from \"../codeSign/macCodeSign\"\r\nimport { Target } from \"../core\"\r\nimport MacPackager from \"../macPackager\"\r\n\r\nconst certType = \"Developer ID Installer\"\r\n\r\n// http://www.shanekirk.com/2013/10/creating-flat-packages-in-osx/\r\n// to use --scripts, we must build .app bundle separately using pkgbuild\r\n// productbuild --scripts doesn't work (because scripts in this case not added to our package)\r\n// https://github.com/electron-userland/electron-osx-sign/issues/96#issuecomment-274986942\r\nexport class PkgTarget extends Target {\r\n  readonly options: PkgOptions = {\r\n    allowAnywhere: true,\r\n    allowCurrentUserHome: true,\r\n    allowRootDirectory: true,\r\n    ...this.packager.config.pkg,\r\n  }\r\n\r\n  constructor(private readonly packager: MacPackager, readonly outDir: string) {\r\n    super(\"pkg\")\r\n  }\r\n\r\n  async build(appPath: string, arch: Arch): Promise<any> {\r\n    const packager = this.packager\r\n    const options = this.options\r\n    const appInfo = packager.appInfo\r\n\r\n    // pkg doesn't like not ASCII symbols (Could not open package to list files: /Volumes/test/t-gIjdGK/test-project-0/dist/Test App ÃŸW-1.1.0.pkg)\r\n    const artifactName = packager.expandArtifactNamePattern(options, \"pkg\")\r\n    const artifactPath = path.join(this.outDir, artifactName)\r\n\r\n    await packager.info.callArtifactBuildStarted({\r\n      targetPresentableName: \"pkg\",\r\n      file: artifactPath,\r\n      arch,\r\n    })\r\n\r\n    const keychainName = (await packager.codeSigningInfo.value).keychainName\r\n\r\n    const appOutDir = this.outDir\r\n    // https://developer.apple.com/library/content/documentation/DeveloperTools/Reference/DistributionDefinitionRef/Chapters/Distribution_XML_Ref.html\r\n    const distInfoFile = path.join(appOutDir, \"distribution.xml\")\r\n\r\n    const innerPackageFile = path.join(appOutDir, `${filterCFBundleIdentifier(appInfo.id)}.pkg`)\r\n    const componentPropertyListFile = path.join(appOutDir, `${filterCFBundleIdentifier(appInfo.id)}.plist`)\r\n    const identity = (await Promise.all([\r\n      findIdentity(certType, options.identity || packager.platformSpecificBuildOptions.identity, keychainName),\r\n      this.customizeDistributionConfiguration(distInfoFile, appPath),\r\n      this.buildComponentPackage(appPath, componentPropertyListFile, innerPackageFile),\r\n    ]))[0]\r\n\r\n    if (identity == null && packager.forceCodeSigning) {\r\n      throw new Error(`Cannot find valid \"${certType}\" to sign standalone installer, please see https://electron.build/code-signing`)\r\n    }\r\n\r\n    const args = prepareProductBuildArgs(identity, keychainName)\r\n    args.push(\"--distribution\", distInfoFile)\r\n    args.push(artifactPath)\r\n    use(options.productbuild, it => args.push(...it as any))\r\n    await exec(\"productbuild\", args, {\r\n      cwd: appOutDir,\r\n    })\r\n    await Promise.all([unlink(innerPackageFile), unlink(distInfoFile)])\r\n\r\n    await packager.dispatchArtifactCreated(artifactPath, this, arch, packager.computeSafeArtifactName(artifactName, \"pkg\", arch))\r\n  }\r\n\r\n  private async customizeDistributionConfiguration(distInfoFile: string, appPath: string) {\r\n    await exec(\"productbuild\", [\"--synthesize\", \"--component\", appPath, distInfoFile], {\r\n      cwd: this.outDir,\r\n    })\r\n\r\n    const options = this.options\r\n    let distInfo = await readFile(distInfoFile, \"utf-8\")\r\n    const insertIndex = distInfo.lastIndexOf(\"</installer-gui-script>\")\r\n    distInfo = distInfo.substring(0, insertIndex) + `    <domains enable_anywhere=\"${options.allowAnywhere}\" enable_currentUserHome=\"${options.allowCurrentUserHome}\" enable_localSystem=\"${options.allowRootDirectory}\" />\\n` + distInfo.substring(insertIndex)\r\n\r\n    if (options.background != null) {\r\n      const background = await this.packager.getResource(options.background.file)\r\n      if (background != null) {\r\n        const alignment = options.background.alignment || \"center\"\r\n        // noinspection SpellCheckingInspection\r\n        const scaling = options.background.scaling || \"tofit\"\r\n        distInfo = distInfo.substring(0, insertIndex) + `    <background file=\"${background}\" alignment=\"${alignment}\" scaling=\"${scaling}\"/>\\n` + distInfo.substring(insertIndex)\r\n      }\r\n    }\r\n\r\n    const welcome = await this.packager.getResource(options.welcome)\r\n    if (welcome != null) {\r\n      distInfo = distInfo.substring(0, insertIndex) + `    <welcome file=\"${welcome}\"/>\\n` + distInfo.substring(insertIndex)\r\n    }\r\n\r\n    const license = await getNotLocalizedLicenseFile(options.license, this.packager)\r\n    if (license != null) {\r\n      distInfo = distInfo.substring(0, insertIndex) + `    <license file=\"${license}\"/>\\n` + distInfo.substring(insertIndex)\r\n    }\r\n\r\n    const conclusion = await this.packager.getResource(options.conclusion)\r\n    if (conclusion != null) {\r\n      distInfo = distInfo.substring(0, insertIndex) + `    <conclusion file=\"${conclusion}\"/>\\n` + distInfo.substring(insertIndex)\r\n    }\r\n\r\n    debug(distInfo)\r\n    await writeFile(distInfoFile, distInfo)\r\n  }\r\n\r\n  private async buildComponentPackage(appPath: string, propertyListOutputFile: string, packageOutputFile: string) {\r\n    const options = this.options\r\n    const rootPath = path.dirname(appPath)\r\n\r\n    // first produce a component plist template\r\n    await exec(\"pkgbuild\", [\r\n      \"--analyze\",\r\n      \"--root\", rootPath,\r\n      propertyListOutputFile,\r\n    ])\r\n\r\n    // process the template plist\r\n    const plistInfo = parsePlist(await readFile(propertyListOutputFile, \"utf8\"))\r\n    if (plistInfo.length > 0) {\r\n      const packageInfo = plistInfo[0]\r\n\r\n      // ChildBundles lists all of electron binaries within the .app.\r\n      // There is no particular reason for removing that key, except to be as close as possible to\r\n      // the PackageInfo generated by previous versions of electron-builder.\r\n      delete packageInfo.ChildBundles\r\n\r\n      if (options.isRelocatable != null) {\r\n        packageInfo.BundleIsRelocatable = options.isRelocatable\r\n      }\r\n\r\n      if (options.isVersionChecked != null) {\r\n        packageInfo.BundleIsVersionChecked = options.isVersionChecked\r\n      }\r\n\r\n      if (options.hasStrictIdentifier != null) {\r\n        packageInfo.BundleHasStrictIdentifier = options.hasStrictIdentifier\r\n      }\r\n\r\n      if (options.overwriteAction != null) {\r\n        packageInfo.BundleOverwriteAction = options.overwriteAction\r\n      }\r\n\r\n      await writeFile(propertyListOutputFile, buildPlist(plistInfo))\r\n    }\r\n\r\n    // now build the package\r\n    const args = [\r\n      \"--root\", rootPath,\r\n      \"--component-plist\", propertyListOutputFile,\r\n    ]\r\n\r\n    use(this.options.installLocation || \"/Applications\", it => args.push(\"--install-location\", it!))\r\n    if (options.scripts != null) {\r\n      args.push(\"--scripts\", path.resolve(this.packager.info.buildResourcesDir, options.scripts))\r\n    }\r\n    else if (options.scripts !== null) {\r\n      const dir = path.join(this.packager.info.buildResourcesDir, \"pkg-scripts\")\r\n      const stat = await statOrNull(dir)\r\n      if (stat != null && stat.isDirectory()) {\r\n        args.push(\"--scripts\", dir)\r\n      }\r\n    }\r\n\r\n    args.push(packageOutputFile)\r\n\r\n    await exec(\"pkgbuild\", args)\r\n  }\r\n}\r\n\r\nexport function prepareProductBuildArgs(identity: Identity | null, keychain: string | null | undefined): Array<string> {\r\n  const args: Array<string> = []\r\n  if (identity != null) {\r\n    args.push(\"--sign\", identity.hash)\r\n    if (keychain != null) {\r\n      args.push(\"--keychain\", keychain)\r\n    }\r\n  }\r\n  return args\r\n}\r\n"],"sourceRoot":""}
