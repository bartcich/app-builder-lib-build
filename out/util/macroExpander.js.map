{"version":3,"sources":["../../src/util/macroExpander.ts"],"names":[],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGM,SAAU,WAAV,CAAsB,OAAtB,EAAuC,IAAvC,EAAwE,OAAxE,EAA0F,KAAA,GAAa,EAAvG,EAA2G,sBAAsB,GAAG,IAApI,EAAwI;AAC5I,MAAI,IAAI,IAAI,IAAZ,EAAkB;AAChB,IAAA,OAAO,GAAG,OAAO,CACjB;AADiB,KAEd,OAFO,CAEC,UAFD,EAEa,EAFb,EAGR;AAHQ,KAIP,OAJO,CAIC,UAJD,EAIa,EAJb,EAKR;AALQ,KAMP,OANO,CAMC,UAND,EAMa,EANb,EAOR;AAPQ,KAQP,OARO,CAQC,UARD,EAQa,EARb,CAAV;AASD;;AAED,SAAO,OAAO,CAAC,OAAR,CAAgB,sBAAhB,EAAwC,CAAC,KAAD,EAAQ,EAAR,KAAsB;AACnE,YAAQ,EAAR;AACE,WAAK,aAAL;AACE,eAAO,sBAAsB,GAAG,OAAO,CAAC,eAAX,GAA6B,OAAO,CAAC,WAAlE;;AAEF,WAAK,MAAL;AACE,YAAI,IAAI,IAAI,IAAZ,EAAkB;AAChB;AACA,iBAAO,EAAP;AACD;;AACD,eAAO,IAAP;;AAEF,WAAK,QAAL;AACE,cAAM,WAAW,GAAG,OAAO,CAAC,WAA5B;;AACA,YAAI,WAAW,IAAI,IAAnB,EAAyB;AACvB,gBAAM,KAAI,wCAAJ,EAA8B,0BAA0B,OAAO,4BAA/D,EAA6F,yCAA7F,CAAN;AACD;;AACD,eAAO,WAAP;;AAEF,WAAK,UAAL;AACE,eAAO,OAAO,CAAC,QAAf;;AAEF,WAAK,SAAL;AACE,eAAO,OAAO,CAAC,OAAR,IAAmB,QAA1B;;AAEF;AACE,YAAI,EAAE,IAAI,OAAV,EAAmB;AACjB,iBAAQ,OAAe,CAAC,EAAD,CAAvB;AACD;;AAED,YAAI,EAAE,CAAC,UAAH,CAAc,MAAd,CAAJ,EAA2B;AACzB,gBAAM,OAAO,GAAG,EAAE,CAAC,SAAH,CAAa,OAAO,MAApB,CAAhB;AACA,gBAAM,QAAQ,GAAG,OAAO,CAAC,GAAR,CAAY,OAAZ,CAAjB;;AACA,cAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,kBAAM,KAAI,wCAAJ,EAA8B,0BAA0B,OAAO,UAAU,OAAO,iBAAhF,EAAmG,sCAAnG,CAAN;AACD;;AACD,iBAAO,QAAP;AACD;;AAED,cAAM,KAAK,GAAG,KAAK,CAAC,EAAD,CAAnB;;AACA,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,gBAAM,KAAI,wCAAJ,EAA8B,0BAA0B,OAAO,YAAY,EAAE,iBAA7E,EAAgG,wCAAhG,CAAN;AACD,SAFD,MAGK;AACH,iBAAO,KAAP;AACD;;AA5CL;AA8CD,GA/CM,CAAP;AAgDD,C","sourcesContent":["import { InvalidConfigurationError } from \"builder-util\"\r\nimport { AppInfo } from \"../appInfo\"\r\n\r\nexport function expandMacro(pattern: string, arch: string | null | undefined, appInfo: AppInfo, extra: any = {}, isProductNameSanitized = true): string {\r\n  if (arch == null) {\r\n    pattern = pattern\r\n    // tslint:disable-next-line:no-invalid-template-strings\r\n      .replace(\"-${arch}\", \"\")\r\n      // tslint:disable-next-line:no-invalid-template-strings\r\n      .replace(\" ${arch}\", \"\")\r\n      // tslint:disable-next-line:no-invalid-template-strings\r\n      .replace(\"_${arch}\", \"\")\r\n      // tslint:disable-next-line:no-invalid-template-strings\r\n      .replace(\"/${arch}\", \"\")\r\n  }\r\n\r\n  return pattern.replace(/\\${([_a-zA-Z./*]+)}/g, (match, p1): string => {\r\n    switch (p1) {\r\n      case \"productName\":\r\n        return isProductNameSanitized ? appInfo.productFilename : appInfo.productName\r\n\r\n      case \"arch\":\r\n        if (arch == null) {\r\n          // see above, we remove macro if no arch\r\n          return \"\"\r\n        }\r\n        return arch\r\n\r\n      case \"author\":\r\n        const companyName = appInfo.companyName\r\n        if (companyName == null) {\r\n          throw new InvalidConfigurationError(`cannot expand pattern \"${pattern}\": author is not specified`, \"ERR_ELECTRON_BUILDER_AUTHOR_UNSPECIFIED\")\r\n        }\r\n        return companyName\r\n\r\n      case \"platform\":\r\n        return process.platform\r\n\r\n      case \"channel\":\r\n        return appInfo.channel || \"latest\"\r\n\r\n      default:\r\n        if (p1 in appInfo) {\r\n          return (appInfo as any)[p1]\r\n        }\r\n\r\n        if (p1.startsWith(\"env.\")) {\r\n          const envName = p1.substring(\"env.\".length)\r\n          const envValue = process.env[envName]\r\n          if (envValue == null) {\r\n            throw new InvalidConfigurationError(`cannot expand pattern \"${pattern}\": env ${envName} is not defined`, \"ERR_ELECTRON_BUILDER_ENV_NOT_DEFINED\")\r\n          }\r\n          return envValue\r\n        }\r\n\r\n        const value = extra[p1]\r\n        if (value == null) {\r\n          throw new InvalidConfigurationError(`cannot expand pattern \"${pattern}\": macro ${p1} is not defined`, \"ERR_ELECTRON_BUILDER_MACRO_NOT_DEFINED\")\r\n        }\r\n        else {\r\n          return value\r\n        }\r\n    }\r\n  })\r\n}"],"sourceRoot":""}
