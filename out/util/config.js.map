{"version":3,"sources":["../../src/util/config.ts"],"names":[],"mappings":"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","sourcesContent":["import { DebugLogger, deepAssign, InvalidConfigurationError, log } from \"builder-util\"\r\nimport { statOrNull } from \"builder-util/out/fs\"\r\nimport { readJson } from \"fs-extra-p\"\r\nimport { Lazy } from \"lazy-val\"\r\nimport * as path from \"path\"\r\nimport { getConfig as _getConfig, loadParentConfig, orNullIfFileNotExist, ReadConfigRequest, validateConfig as _validateConfig } from \"read-config-file\"\r\nimport { FileSet } from \"..\"\r\nimport { Configuration } from \"../configuration\"\r\nimport { reactCra } from \"../presets/rectCra\"\r\n\r\n// https://github.com/electron-userland/electron-builder/issues/1847\r\nfunction mergePublish(config: Configuration, configFromOptions: Configuration) {\r\n  // if config from disk doesn't have publish (or object), no need to handle, it will be simply merged by deepAssign\r\n  const publish = Array.isArray(config.publish) ? configFromOptions.publish : null\r\n  if (publish != null) {\r\n    delete (configFromOptions as any).publish\r\n  }\r\n\r\n  deepAssign(config, configFromOptions)\r\n\r\n  if (publish == null) {\r\n    return\r\n  }\r\n\r\n  const listOnDisk = config.publish as Array<any>\r\n  if (listOnDisk.length === 0) {\r\n    config.publish = publish\r\n  }\r\n  else {\r\n    // apply to first\r\n    Object.assign(listOnDisk[0], publish)\r\n  }\r\n}\r\n\r\nexport async function getConfig(projectDir: string,\r\n                                configPath: string | null,\r\n                                configFromOptions: Configuration | null | undefined,\r\n                                packageMetadata: Lazy<{ [key: string]: any } | null> = new Lazy(() => orNullIfFileNotExist(readJson(path.join(projectDir, \"package.json\"))))): Promise<Configuration> {\r\n  const configRequest: ReadConfigRequest = {packageKey: \"build\", configFilename: \"electron-builder\", projectDir, packageMetadata}\r\n  const configAndEffectiveFile = await _getConfig<Configuration>(configRequest, configPath)\r\n  const config = configAndEffectiveFile == null ? {} : configAndEffectiveFile.result\r\n  if (configFromOptions != null) {\r\n    mergePublish(config, configFromOptions)\r\n  }\r\n\r\n  if (configAndEffectiveFile != null) {\r\n    log.info({file: configAndEffectiveFile.configFile == null ? 'package.json (\"build\" field)' : configAndEffectiveFile.configFile}, \"loaded configuration\")\r\n  }\r\n\r\n  if (config.extends == null && config.extends !== null) {\r\n    const metadata = await packageMetadata.value || {}\r\n    const devDependencies = metadata.devDependencies\r\n    const dependencies = metadata.dependencies\r\n    if ((dependencies != null && \"react-scripts\" in dependencies) || (devDependencies != null && \"react-scripts\" in devDependencies)) {\r\n      config.extends = \"react-cra\"\r\n    }\r\n    else if (devDependencies != null && \"electron-webpack\" in devDependencies) {\r\n      let file = \"electron-webpack/out/electron-builder.js\"\r\n      try {\r\n        file = require.resolve(file)\r\n      }\r\n      catch (ignore) {\r\n        file = require.resolve(\"electron-webpack/electron-builder.yml\")\r\n      }\r\n      config.extends = `file:${file}`\r\n    }\r\n  }\r\n\r\n  let parentConfig: Configuration | null\r\n  if (config.extends === \"react-cra\") {\r\n    parentConfig = await reactCra(projectDir)\r\n    log.info({preset: config.extends}, \"loaded parent configuration\")\r\n  }\r\n  else if (config.extends != null) {\r\n    const parentConfigAndEffectiveFile = await loadParentConfig<Configuration>(configRequest, config.extends)\r\n    log.info({file: parentConfigAndEffectiveFile.configFile}, \"loaded parent configuration\")\r\n    parentConfig = parentConfigAndEffectiveFile.result\r\n  }\r\n  else {\r\n    parentConfig = null\r\n  }\r\n\r\n  return doMergeConfigs(config, parentConfig)\r\n}\r\n\r\n// normalize for easy merge\r\nfunction normalizeFiles(configuration: Configuration, name: \"files\" | \"extraFiles\" | \"extraResources\") {\r\n  let value = configuration[name]\r\n  if (value == null) {\r\n    return\r\n  }\r\n\r\n  if (!Array.isArray(value)) {\r\n    value = [value]\r\n  }\r\n\r\n  itemLoop: for (let i = 0; i < value.length; i++) {\r\n    let item = value[i]\r\n    if (typeof item === \"string\") {\r\n      // merge with previous if possible\r\n      if (i !== 0) {\r\n        let prevItemIndex = i - 1\r\n        let prevItem: FileSet\r\n        do {\r\n          prevItem = value[prevItemIndex--] as FileSet\r\n        } while (prevItem == null)\r\n\r\n        if (prevItem.from == null && prevItem.to == null) {\r\n          if (prevItem.filter == null) {\r\n            prevItem.filter = [item]\r\n          }\r\n          else {\r\n            (prevItem.filter as Array<string>).push(item)\r\n          }\r\n          value[i] = null as any\r\n          continue itemLoop\r\n        }\r\n      }\r\n\r\n      item = {\r\n        filter: [item],\r\n      }\r\n      value[i] = item\r\n    }\r\n    else if (Array.isArray(item)) {\r\n      throw new Error(`${name} configuration is invalid, nested array not expected for index ${i}: ` + item)\r\n    }\r\n\r\n    // make sure that merge logic is not complex - unify different presentations\r\n    if (item.from === \".\") {\r\n      item.from = undefined\r\n    }\r\n\r\n    if (item.to === \".\") {\r\n      item.to = undefined\r\n    }\r\n\r\n    if (item.filter != null && typeof item.filter === \"string\") {\r\n      item.filter = [item.filter]\r\n    }\r\n  }\r\n\r\n  configuration[name] = value.filter(it => it != null)\r\n}\r\n\r\nfunction mergeFiles(configuration: Configuration, parentConfiguration: Configuration, mergedConfiguration: Configuration, name: \"files\" | \"extraFiles\" | \"extraResources\") {\r\n  const list = configuration[name] as Array<FileSet> | null\r\n  const parentList = parentConfiguration[name] as Array<FileSet> | null\r\n  if (list == null || parentList == null) {\r\n    return\r\n  }\r\n\r\n  const result = list.slice()\r\n  mergedConfiguration[name] = result\r\n\r\n  itemLoop: for (const item of parentConfiguration.files as Array<FileSet>) {\r\n    for (const existingItem of list) {\r\n      if (existingItem.from === item.from && existingItem.to === item.to) {\r\n        if (item.filter != null) {\r\n          if (existingItem.filter == null) {\r\n            existingItem.filter = item.filter.slice()\r\n          }\r\n          else {\r\n            existingItem.filter = (item.filter as Array<string>).concat(existingItem.filter)\r\n          }\r\n        }\r\n\r\n        continue itemLoop\r\n      }\r\n    }\r\n\r\n    // existing item not found, simply add\r\n    result.push(item)\r\n  }\r\n}\r\n\r\nexport function doMergeConfigs(configuration: Configuration, parentConfiguration: Configuration | null) {\r\n  normalizeFiles(configuration, \"files\")\r\n  normalizeFiles(configuration, \"extraFiles\")\r\n  normalizeFiles(configuration, \"extraResources\")\r\n\r\n  if (parentConfiguration == null) {\r\n    return deepAssign(getDefaultConfig(), configuration)\r\n  }\r\n\r\n  normalizeFiles(parentConfiguration, \"files\")\r\n  normalizeFiles(parentConfiguration, \"extraFiles\")\r\n  normalizeFiles(parentConfiguration, \"extraResources\")\r\n\r\n  const result = deepAssign(getDefaultConfig(), parentConfiguration, configuration)\r\n  mergeFiles(configuration, parentConfiguration, result, \"files\")\r\n  return result\r\n}\r\n\r\nfunction getDefaultConfig(): Configuration {\r\n  return {\r\n    directories: {\r\n      output: \"dist\",\r\n      buildResources: \"build\",\r\n    },\r\n  }\r\n}\r\n\r\nconst schemeDataPromise = new Lazy(() => readJson(path.join(__dirname, \"..\", \"..\", \"scheme.json\")))\r\n\r\nexport async function validateConfig(config: Configuration, debugLogger: DebugLogger) {\r\n  const extraMetadata = config.extraMetadata\r\n  if (extraMetadata != null) {\r\n    if (extraMetadata.build != null) {\r\n      throw new InvalidConfigurationError(`--em.build is deprecated, please specify as -c\"`)\r\n    }\r\n    if (extraMetadata.directories != null) {\r\n      throw new InvalidConfigurationError(`--em.directories is deprecated, please specify as -c.directories\"`)\r\n    }\r\n  }\r\n\r\n  // noinspection JSDeprecatedSymbols\r\n  if (config.npmSkipBuildFromSource === false) {\r\n    config.buildDependenciesFromSource = false\r\n  }\r\n\r\n  await _validateConfig(config, schemeDataPromise, (message, errors) => {\r\n    if (debugLogger.isEnabled) {\r\n      debugLogger.add(\"invalidConfig\", JSON.stringify(errors, null, 2))\r\n    }\r\n\r\n    return `${message}\r\n\r\nHow to fix:\r\n1. Open https://electron.build/configuration/configuration\r\n2. Search the option name on the page.\r\n  * Not found? The option was deprecated or not exists (check spelling).\r\n  * Found? Check that the option in the appropriate place. e.g. \"title\" only in the \"dmg\", not in the root.\r\n`\r\n  })\r\n}\r\n\r\nconst DEFAULT_APP_DIR_NAMES = [\"app\", \"www\"]\r\n\r\nexport async function computeDefaultAppDirectory(projectDir: string, userAppDir: string | null | undefined): Promise<string> {\r\n  if (userAppDir != null) {\r\n    const absolutePath = path.resolve(projectDir, userAppDir)\r\n    const stat = await statOrNull(absolutePath)\r\n    if (stat == null) {\r\n      throw new InvalidConfigurationError(`Application directory ${userAppDir} doesn't exist`)\r\n    }\r\n    else if (!stat.isDirectory()) {\r\n      throw new InvalidConfigurationError(`Application directory ${userAppDir} is not a directory`)\r\n    }\r\n    else if (projectDir === absolutePath) {\r\n      log.warn({appDirectory: userAppDir}, `Specified application directory equals to project dir — superfluous or wrong configuration`)\r\n    }\r\n    return absolutePath\r\n  }\r\n\r\n  for (const dir of DEFAULT_APP_DIR_NAMES) {\r\n    const absolutePath = path.join(projectDir, dir)\r\n    const packageJson = path.join(absolutePath, \"package.json\")\r\n    const stat = await statOrNull(packageJson)\r\n    if (stat != null && stat.isFile()) {\r\n      return absolutePath\r\n    }\r\n  }\r\n  return projectDir\r\n}\r\n"],"sourceRoot":""}
