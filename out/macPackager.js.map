{"version":3,"sources":["../src/macPackager.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepAssign, Arch, AsyncTaskManager, exec, InvalidConfigurationError, log, use } from \"builder-util\"\r\nimport { signAsync, SignOptions } from \"electron-osx-sign\"\r\nimport { ensureDir } from \"fs-extra-p\"\r\nimport { Lazy } from \"lazy-val\"\r\nimport * as path from \"path\"\r\nimport { copyFile, unlinkIfExists } from \"builder-util/out/fs\"\r\nimport { AppInfo } from \"./appInfo\"\r\nimport { appleCertificatePrefixes, CertType, CodeSigningInfo, createKeychain, findIdentity, Identity, isSignAllowed, reportError } from \"./codeSign/macCodeSign\"\r\nimport { DIR_TARGET, Platform, Target } from \"./core\"\r\nimport { ElectronPlatformName } from \"./index\"\r\nimport { MacConfiguration, MasConfiguration } from \"./options/macOptions\"\r\nimport { Packager } from \"./packager\"\r\nimport { chooseNotNull, PlatformPackager } from \"./platformPackager\"\r\nimport { ArchiveTarget } from \"./targets/ArchiveTarget\"\r\nimport { PkgTarget, prepareProductBuildArgs } from \"./targets/pkg\"\r\nimport { createCommonTarget, NoOpTarget } from \"./targets/targetFactory\"\r\n\r\nexport default class MacPackager extends PlatformPackager<MacConfiguration> {\r\n  readonly codeSigningInfo = new Lazy<CodeSigningInfo>(() => {\r\n    const cscLink = this.getCscLink()\r\n    if (cscLink == null || process.platform !== \"darwin\") {\r\n      return Promise.resolve({keychainName: process.env.CSC_KEYCHAIN || null})\r\n    }\r\n\r\n    return createKeychain({\r\n      tmpDir: this.info.tempDirManager,\r\n      cscLink,\r\n      cscKeyPassword: this.getCscPassword(),\r\n      cscILink: chooseNotNull(this.platformSpecificBuildOptions.cscInstallerLink, process.env.CSC_INSTALLER_LINK),\r\n      cscIKeyPassword: chooseNotNull(this.platformSpecificBuildOptions.cscInstallerKeyPassword, process.env.CSC_INSTALLER_KEY_PASSWORD),\r\n      currentDir: this.projectDir\r\n    })\r\n  })\r\n\r\n  private _iconPath = new Lazy(() => this.getOrConvertIcon(\"icns\"))\r\n\r\n  constructor(info: Packager) {\r\n    super(info, Platform.MAC)\r\n  }\r\n\r\n  get defaultTarget(): Array<string> {\r\n    return this.info.framework.macOsDefaultTargets\r\n  }\r\n\r\n  protected prepareAppInfo(appInfo: AppInfo): AppInfo {\r\n    return new AppInfo(this.info, this.platformSpecificBuildOptions.bundleVersion, this.platformSpecificBuildOptions)\r\n  }\r\n\r\n  async getIconPath(): Promise<string | null> {\r\n    return this._iconPath.value\r\n  }\r\n\r\n  createTargets(targets: Array<string>, mapper: (name: string, factory: (outDir: string) => Target) => void): void {\r\n    for (const name of targets) {\r\n      switch (name) {\r\n        case DIR_TARGET:\r\n          break\r\n\r\n        case \"dmg\":\r\n          const { DmgTarget } = require(\"dmg-builder\")\r\n          mapper(name, outDir => new DmgTarget(this, outDir))\r\n          break\r\n\r\n        case \"zip\":\r\n          // https://github.com/electron-userland/electron-builder/issues/2313\r\n          mapper(name, outDir => new ArchiveTarget(name, outDir, this, true))\r\n          break\r\n\r\n        case \"pkg\":\r\n          mapper(name, outDir => new PkgTarget(this, outDir))\r\n          break\r\n\r\n        default:\r\n          mapper(name, outDir => name === \"mas\" || name === \"mas-dev\" ? new NoOpTarget(name) : createCommonTarget(name, outDir, this))\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  async pack(outDir: string, arch: Arch, targets: Array<Target>, taskManager: AsyncTaskManager): Promise<any> {\r\n    let nonMasPromise: Promise<any> | null = null\r\n\r\n    const hasMas = targets.length !== 0 && targets.some(it => it.name === \"mas\" || it.name === \"mas-dev\")\r\n    const prepackaged = this.packagerOptions.prepackaged\r\n\r\n    if (!hasMas || targets.length > 1) {\r\n      const appPath = prepackaged == null ? path.join(this.computeAppOutDir(outDir, arch), `${this.appInfo.productFilename}.app`) : prepackaged\r\n      nonMasPromise = (prepackaged ? Promise.resolve() : this.doPack(outDir, path.dirname(appPath), this.platform.nodeName as ElectronPlatformName, arch, this.platformSpecificBuildOptions, targets))\r\n        .then(() => this.sign(appPath, null, null))\r\n        .then(() => this.packageInDistributableFormat(appPath, Arch.x64, targets, taskManager))\r\n    }\r\n\r\n    for (const target of targets) {\r\n      const targetName = target.name\r\n      if (!(targetName === \"mas\" || targetName === \"mas-dev\")) {\r\n        continue\r\n      }\r\n\r\n      const masBuildOptions = deepAssign({}, this.platformSpecificBuildOptions, (this.config as any).mas)\r\n      if (targetName === \"mas-dev\") {\r\n        deepAssign(masBuildOptions, (this.config as any)[targetName], {\r\n          type: \"development\",\r\n        })\r\n      }\r\n\r\n      const targetOutDir = path.join(outDir, targetName)\r\n      if (prepackaged == null) {\r\n        await this.doPack(outDir, targetOutDir, \"mas\", arch, masBuildOptions, [target])\r\n        await this.sign(path.join(targetOutDir, `${this.appInfo.productFilename}.app`), targetOutDir, masBuildOptions)\r\n      }\r\n      else {\r\n        await this.sign(prepackaged, targetOutDir, masBuildOptions)\r\n      }\r\n    }\r\n\r\n    if (nonMasPromise != null) {\r\n      await nonMasPromise\r\n    }\r\n  }\r\n\r\n  private async sign(appPath: string, outDir: string | null, masOptions: MasConfiguration | null): Promise<void> {\r\n    if (!isSignAllowed()) {\r\n      return\r\n    }\r\n\r\n    const isMas = masOptions != null\r\n    const macOptions = this.platformSpecificBuildOptions\r\n    const qualifier = (isMas ? masOptions!.identity : null) || macOptions.identity\r\n\r\n    if (!isMas && qualifier === null) {\r\n      if (this.forceCodeSigning) {\r\n        throw new InvalidConfigurationError(\"identity explicitly is set to null, but forceCodeSigning is set to true\")\r\n      }\r\n      log.info({reason: \"identity explicitly is set to null\"}, \"skipped macOS code signing\")\r\n      return\r\n    }\r\n\r\n    const keychainName = (await this.codeSigningInfo.value).keychainName\r\n    const explicitType = isMas ? masOptions!.type : macOptions.type\r\n    const type = explicitType || \"distribution\"\r\n    const isDevelopment = type === \"development\"\r\n    const certificateType = getCertificateType(isMas, isDevelopment)\r\n    let identity = await findIdentity(certificateType, qualifier, keychainName)\r\n    if (identity == null) {\r\n      if (!isMas && !isDevelopment && explicitType !== \"distribution\") {\r\n        identity = await findIdentity(\"Mac Developer\", qualifier, keychainName)\r\n        if (identity != null) {\r\n          log.warn(\"Mac Developer is used to sign app — it is only for development and testing, not for production\")\r\n        }\r\n      }\r\n\r\n      if (identity == null) {\r\n        await reportError(isMas, certificateType, qualifier, keychainName, this.forceCodeSigning)\r\n        return\r\n      }\r\n    }\r\n\r\n    const signOptions: any = {\r\n      \"identity-validation\": false,\r\n      // https://github.com/electron-userland/electron-builder/issues/1699\r\n      // kext are signed by the chipset manufacturers. You need a special certificate (only available on request) from Apple to be able to sign kext.\r\n      ignore: (file: string) => {\r\n        return file.endsWith(\".kext\") || file.startsWith(\"/Contents/PlugIns\", appPath.length) ||\r\n          // https://github.com/electron-userland/electron-builder/issues/2010\r\n          file.includes(\"/node_modules/puppeteer/.local-chromium\")\r\n      },\r\n      identity: identity!,\r\n      type,\r\n      platform: isMas ? \"mas\" : \"darwin\",\r\n      version: this.config.electronVersion,\r\n      app: appPath,\r\n      keychain: keychainName || undefined,\r\n      binaries: (isMas && masOptions != null ? masOptions.binaries : macOptions.binaries) || undefined,\r\n      requirements: isMas || macOptions.requirements == null ? undefined : await this.getResource(macOptions.requirements),\r\n      \"gatekeeper-assess\": appleCertificatePrefixes.find(it => identity!.name.startsWith(it)) != null\r\n    }\r\n\r\n    await this.adjustSignOptions(signOptions, masOptions)\r\n    log.info({\r\n      file: log.filePath(appPath),\r\n      identityName: identity.name,\r\n      identityHash: identity.hash,\r\n      provisioningProfile: signOptions[\"provisioning-profile\"] || \"none\",\r\n    }, \"signing\")\r\n    await this.doSign(signOptions)\r\n\r\n    // https://github.com/electron-userland/electron-builder/issues/1196#issuecomment-312310209\r\n    if (masOptions != null && !isDevelopment) {\r\n      const certType = isDevelopment ? \"Mac Developer\" : \"3rd Party Mac Developer Installer\"\r\n      const masInstallerIdentity = await findIdentity(certType, masOptions.identity, keychainName)\r\n      if (masInstallerIdentity == null) {\r\n        throw new InvalidConfigurationError(`Cannot find valid \"${certType}\" identity to sign MAS installer, please see https://electron.build/code-signing`)\r\n      }\r\n\r\n      // mas uploaded to AppStore, so, use \"-\" instead of space for name\r\n      const artifactName = this.expandArtifactNamePattern(masOptions, \"pkg\")\r\n      const artifactPath = path.join(outDir!, artifactName)\r\n      await this.doFlat(appPath, artifactPath, masInstallerIdentity, keychainName)\r\n      await this.dispatchArtifactCreated(artifactPath, null, Arch.x64, this.computeSafeArtifactName(artifactName, \"pkg\"))\r\n    }\r\n  }\r\n\r\n  private async adjustSignOptions(signOptions: any, masOptions: MasConfiguration | null) {\r\n    const resourceList = await this.resourceList\r\n    if (resourceList.includes(`entitlements.osx.plist`)) {\r\n      throw new InvalidConfigurationError(\"entitlements.osx.plist is deprecated name, please use entitlements.mac.plist\")\r\n    }\r\n    if (resourceList.includes(`entitlements.osx.inherit.plist`)) {\r\n      throw new InvalidConfigurationError(\"entitlements.osx.inherit.plist is deprecated name, please use entitlements.mac.inherit.plist\")\r\n    }\r\n\r\n    const customSignOptions = masOptions || this.platformSpecificBuildOptions\r\n    const entitlementsSuffix = masOptions == null ? \"mac\" : \"mas\"\r\n    if (customSignOptions.entitlements == null) {\r\n      const p = `entitlements.${entitlementsSuffix}.plist`\r\n      if (resourceList.includes(p)) {\r\n        signOptions.entitlements = path.join(this.info.buildResourcesDir, p)\r\n      }\r\n    }\r\n    else {\r\n      signOptions.entitlements = customSignOptions.entitlements\r\n    }\r\n\r\n    if (customSignOptions.entitlementsInherit == null) {\r\n      const p = `entitlements.${entitlementsSuffix}.inherit.plist`\r\n      if (resourceList.includes(p)) {\r\n        signOptions[\"entitlements-inherit\"] = path.join(this.info.buildResourcesDir, p)\r\n      }\r\n    }\r\n    else {\r\n      signOptions[\"entitlements-inherit\"] = customSignOptions.entitlementsInherit\r\n    }\r\n\r\n    if (customSignOptions.provisioningProfile != null) {\r\n      signOptions[\"provisioning-profile\"] = customSignOptions.provisioningProfile\r\n    }\r\n  }\r\n\r\n  //noinspection JSMethodCanBeStatic\r\n  protected async doSign(opts: SignOptions): Promise<any> {\r\n    return signAsync(opts)\r\n  }\r\n\r\n  //noinspection JSMethodCanBeStatic\r\n  protected async doFlat(appPath: string, outFile: string, identity: Identity, keychain: string | null | undefined): Promise<any> {\r\n    // productbuild doesn't created directory for out file\r\n    await ensureDir(path.dirname(outFile))\r\n\r\n    const args = prepareProductBuildArgs(identity, keychain)\r\n    args.push(\"--component\", appPath, \"/Applications\")\r\n    args.push(outFile)\r\n    return await exec(\"productbuild\", args)\r\n  }\r\n\r\n  public getElectronSrcDir(dist: string) {\r\n    return path.resolve(this.projectDir, dist, this.info.framework.distMacOsAppName)\r\n  }\r\n\r\n  public getElectronDestinationDir(appOutDir: string) {\r\n    return path.join(appOutDir, this.info.framework.distMacOsAppName)\r\n  }\r\n\r\n  // todo fileAssociations\r\n  async applyCommonInfo(appPlist: any, contentsPath: string) {\r\n    const appInfo = this.appInfo\r\n    const appFilename = appInfo.productFilename\r\n\r\n    // https://github.com/electron-userland/electron-builder/issues/1278\r\n    appPlist.CFBundleExecutable = appFilename.endsWith(\" Helper\") ? appFilename.substring(0, appFilename.length - \" Helper\".length) : appFilename\r\n\r\n    const icon = await this.getIconPath()\r\n    if (icon != null) {\r\n      const oldIcon = appPlist.CFBundleIconFile\r\n      const resourcesPath = path.join(contentsPath, \"Resources\")\r\n      if (oldIcon != null) {\r\n        await unlinkIfExists(path.join(resourcesPath, oldIcon))\r\n      }\r\n      const iconFileName = `${appFilename}.icns`\r\n      appPlist.CFBundleIconFile = iconFileName\r\n      await copyFile(icon, path.join(resourcesPath, iconFileName))\r\n    }\r\n    appPlist.CFBundleName = appInfo.productName\r\n    appPlist.CFBundleDisplayName = appInfo.productName\r\n\r\n    const minimumSystemVersion = this.platformSpecificBuildOptions.minimumSystemVersion\r\n    if (minimumSystemVersion != null) {\r\n      appPlist.LSMinimumSystemVersion = minimumSystemVersion\r\n    }\r\n\r\n    appPlist.CFBundleIdentifier = appInfo.macBundleIdentifier\r\n\r\n    appPlist.CFBundleShortVersionString = this.platformSpecificBuildOptions.bundleShortVersion || appInfo.version\r\n    appPlist.CFBundleVersion = appInfo.buildVersion\r\n\r\n    use(this.platformSpecificBuildOptions.category || (this.config as any).category, it => appPlist.LSApplicationCategoryType = it)\r\n    appPlist.NSHumanReadableCopyright = appInfo.copyright\r\n\r\n    if (this.platformSpecificBuildOptions.darkModeSupport) {\r\n      appPlist.NSRequiresAquaSystemAppearance = false\r\n    }\r\n\r\n    const extendInfo = this.platformSpecificBuildOptions.extendInfo\r\n    if (extendInfo != null) {\r\n      Object.assign(appPlist, extendInfo)\r\n    }\r\n  }\r\n}\r\n\r\nfunction getCertificateType(isMas: boolean, isDevelopment: boolean): CertType {\r\n  if (isDevelopment) {\r\n    return \"Mac Developer\"\r\n  }\r\n  return isMas ? \"3rd Party Mac Developer Application\" : \"Developer ID Application\"\r\n}"],"sourceRoot":""}
