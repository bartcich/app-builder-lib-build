{"version":3,"sources":["../src/Framework.ts"],"names":[],"mappings":";;;;;;;AAmDM,SAAU,eAAV,CAA0B,SAA1B,EAA8C;AAClD,SAAO,SAAS,CAAC,IAAV,KAAmB,UAAnB,IAAiC,SAAS,CAAC,IAAV,KAAmB,MAA3D;AACD,C","sourcesContent":["import { FileTransformer } from \"builder-util/out/fs\"\r\nimport { AsarIntegrity } from \"./asar/integrity\"\r\nimport { Platform, PlatformPackager, ElectronPlatformName, AfterPackContext } from \"./index\"\r\n\r\nexport interface Framework {\r\n  readonly name: string\r\n  readonly version: string\r\n  readonly distMacOsAppName: string\r\n  readonly macOsDefaultTargets: Array<string>\r\n  readonly defaultAppIdPrefix: string\r\n\r\n  readonly isNpmRebuildRequired: boolean\r\n\r\n  readonly isCopyElevateHelper: boolean\r\n\r\n  getDefaultIcon?(platform: Platform): string | null\r\n\r\n  getMainFile?(platform: Platform): string | null\r\n\r\n  getExcludedDependencies?(platform: Platform): Array<string> | null\r\n\r\n  prepareApplicationStageDirectory(options: PrepareApplicationStageDirectoryOptions): Promise<any>\r\n\r\n  beforeCopyExtraFiles?(options: BeforeCopyExtraFilesOptions): Promise<any>\r\n\r\n  afterPack?(context: AfterPackContext): Promise<any>\r\n\r\n  createTransformer?(): FileTransformer | null\r\n}\r\n\r\nexport interface BeforeCopyExtraFilesOptions {\r\n  packager: PlatformPackager<any>\r\n  appOutDir: string\r\n\r\n  asarIntegrity: AsarIntegrity | null\r\n\r\n  // ElectronPlatformName\r\n  platformName: string\r\n}\r\n\r\nexport interface PrepareApplicationStageDirectoryOptions {\r\n  readonly packager: PlatformPackager<any>\r\n  /**\r\n   * Platform doesn't process application output directory in any way. Unpack implementation must create or empty dir if need.\r\n   */\r\n  readonly appOutDir: string\r\n  readonly platformName: ElectronPlatformName\r\n  readonly arch: string\r\n  readonly version: string\r\n}\r\n\r\nexport function isElectronBased(framework: Framework) {\r\n  return framework.name === \"electron\" || framework.name === \"muon\"\r\n}"],"sourceRoot":""}
